{"version":3,"sources":["TablePage.jsx","App.js","index.js"],"names":["TablePage","useState","M","setM","N","setN","X","setX","matrix","setMatrix","nextObj","setNextObj","searchedArr","setSearchedArr","isTotalEnter","setTotalEnter","percentArr","setPercentArr","activeIndex","setActiveIndex","useEffect","arr","someObj","i","push","j","key","uuidv4","Math","round","random","totalInRow","useMemo","length","percents","val","map","item","sum","reduce","acc","el","newArr","arrayColumn","useCallback","n","x","totalInCol","obj","handleInc","newVal","handleHover","el_number","defaultCount","searchedArray","Object","keys","name","value","sort","a","b","searchedIndex","findIndex","handleHoverRemove","totalEnter","totalLeave","addRow","removeRow","index","defaultArr","slice","newObj","JSON","parse","stringify","splice","forEach","Container","Row","Col","className","type","onChange","e","target","Button","onClick","Table","striped","bordered","hover","row","onMouseEnter","onMouseLeave","includes","style","width","variant","size","lastRow","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9079ee2.chunk.js","sourcesContent":["import { useCallback, useEffect, useMemo, useState } from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { Table, Button, Container, Row, Col } from 'react-bootstrap';\n\nconst TablePage = () => {\n  const [M, setM] = useState('');\n  const [N, setN] = useState('');\n  const [X, setX] = useState(6);\n  const [matrix, setMatrix] = useState([]);\n  const [nextObj, setNextObj] = useState({});\n  const [searchedArr, setSearchedArr] = useState([]);\n  const [isTotalEnter, setTotalEnter] = useState(false);\n  const [percentArr, setPercentArr] = useState([]);\n  const [activeIndex, setActiveIndex] = useState(null);\n\n  useEffect(() => {\n    const arr = [];\n    const someObj = {};\n    for (let i = 0; i < M; i++) {\n      arr.push([]);\n      for (let j = 0; j < N; j++) {\n        let key = uuidv4();\n        arr[i].push(key);\n        someObj[key] = Math.round(Math.random() * 900 + 100);\n      }\n    }\n    setNextObj(someObj);\n    setMatrix(arr);\n  }, [M, N]);\n\n  const totalInRow = useMemo(() => {\n    if (matrix.length <= 0) return 0;\n    const percents = [];\n    const val = matrix.map((item) => {\n      if (!item.length) return 0;\n      const sum = item.reduce((acc, el) => acc + nextObj[el], 0);\n      let newArr = item.map((el) => Math.round((nextObj[el] / sum) * 100));\n      percents.push(newArr);\n      return sum;\n    });\n    setPercentArr(percents);\n    return { ...val };\n  }, [matrix, nextObj]);\n\n  const arrayColumn = useCallback((arr, n) => arr.map((x) => x[n]), []);\n\n  const totalInCol = useMemo(() => {\n    if (matrix.length <= 0) return 0;\n    let obj = {};\n    for (let i = 0; i < matrix[0].length; i++) {\n      obj[i] = arrayColumn(matrix, i).reduce((acc, el) => acc + nextObj[el], 0);\n    }\n    return obj;\n  }, [arrayColumn, matrix, nextObj]);\n\n  const handleInc = useCallback(\n    (el) => {\n      const newVal = nextObj[el] + 1;\n      setNextObj({ ...nextObj, [el]: newVal });\n    },\n    [nextObj]\n  );\n\n  const handleHover = useCallback(\n    (el_number) => {\n      if (!X) return;\n\n      let defaultCount = X;\n      const newArr = [];\n\n      const searchedArray = Object.keys(nextObj)\n        .map((el) => ({ name: el, value: nextObj[el] }))\n        .sort((a, b) => a.value - b.value);\n\n      const searchedIndex = searchedArray.findIndex((el) => el.name === el_number);\n\n      for (let i = 1; i < X + 1; i++) {\n        if (searchedArray[searchedIndex - i] && defaultCount > 0) {\n          newArr.push(searchedArray[searchedIndex - i].name);\n          defaultCount -= 1;\n        }\n        if (searchedArray[searchedIndex + i] && defaultCount > 0) {\n          newArr.push(searchedArray[searchedIndex + i].name);\n          defaultCount -= 1;\n        }\n      }\n      setSearchedArr(newArr);\n    },\n    [X, nextObj]\n  );\n\n  const handleHoverRemove = useCallback(() => setSearchedArr([]), []);\n\n  const totalEnter = useCallback((i) => {\n    setActiveIndex(i);\n    setTotalEnter(true);\n  }, []);\n\n  const totalLeave = useCallback(() => {\n    setTotalEnter(false);\n    setActiveIndex(null);\n  }, []);\n\n  const addRow = useCallback(() => {\n    const arr = [];\n    const someObj = {};\n    for (let j = 0; j < N; j++) {\n      let key = uuidv4();\n      arr.push(key);\n      someObj[key] = Math.round(Math.random() * 900 + 100);\n    }\n    setNextObj({ ...nextObj, ...someObj });\n    setMatrix([...matrix, arr]);\n  }, [N, matrix, nextObj]);\n\n  const removeRow = useCallback(\n    (index) => {\n      const defaultArr = matrix.slice();\n      const newObj = JSON.parse(JSON.stringify(nextObj));\n      const removedArr = defaultArr.splice(index, 1)[0];\n\n      removedArr.forEach((el) => delete newObj[el]);\n\n      setNextObj(newObj);\n      setMatrix(defaultArr);\n    },\n    [matrix, nextObj]\n  );\n\n  return (\n    <Container>\n      <Row>\n        <Col>\n          <div className=\"body-inner\">\n            <label className=\"data-input\">\n              M <input type=\"number\" value={M} onChange={(e) => setM(e.target.value)} />\n            </label>\n            <label className=\"data-input\">\n              N <input type=\"number\" value={N} onChange={(e) => setN(e.target.value)} />\n            </label>\n            <label className=\"data-input\">\n              X <input type=\"number\" value={X} onChange={(e) => setX(e.target.value)} />\n            </label>\n            <Button onClick={addRow} className=\"my-4\">\n              Add row\n            </Button>\n          </div>\n\n          {matrix.length > 0 && matrix[0].length > 0 ? (\n            <Table striped bordered hover>\n              <thead>\n                <tr>\n                  {matrix[0].map((el, index) => (\n                    <th key={index}>\n                      <b>{index + 1}</b>\n                    </th>\n                  ))}\n                  <th key=\"total\">total</th>\n                </tr>\n              </thead>\n              <tbody>\n                {matrix.map((row, index) => (\n                  <tr key={index}>\n                    {row.map((el, i) => (\n                      <td\n                        onMouseEnter={() => handleHover(el)}\n                        onMouseLeave={handleHoverRemove}\n                        onClick={() => handleInc(el)}\n                        className={`bcg ${searchedArr.includes(el) ? 'active' : ''}`}\n                        key={el}\n                      >\n                        {isTotalEnter && activeIndex === index ? percentArr[index][i] : nextObj[el]}\n\n                        {isTotalEnter && activeIndex === index && (\n                          <span className=\"bcg-active\" style={{ width: `${percentArr[index][i]}%` }} />\n                        )}\n                      </td>\n                    ))}\n                    <td\n                      className=\"last-item\"\n                      key=\"last-item\"\n                      onMouseEnter={() => totalEnter(index)}\n                      onMouseLeave={totalLeave}\n                    >\n                      <b>{totalInRow[index]}</b>\n                    </td>\n                    <td key={Math.random()} style={{ width: 0 }}>\n                      <Button variant=\"danger\" size={'sm'} onClick={() => removeRow(index)}>\n                        -\n                      </Button>\n                    </td>\n                  </tr>\n                ))}\n                <tr>\n                  {matrix[0].map((lastRow, index) => (\n                    <td key={index * totalInCol[index]}>\n                      <b>{totalInCol[index]}</b>\n                    </td>\n                  ))}\n                  <td key=\"last\">-</td>\n                </tr>\n              </tbody>\n            </Table>\n          ) : null}\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nexport default TablePage;\n","import TablePage from \"./TablePage\";\n\nfunction App() {\n  return (\n    <TablePage />\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport App from './App';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}